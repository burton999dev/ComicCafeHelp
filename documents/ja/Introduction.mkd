# はじめに

`ComicCafe` は1,000冊以上もの大量の自炊ファイルを保持してるユーザーを想定して開発されたストリーミング型のコミックビューワです。  
通常のコミックビューワとは異なり `PC` にインストールされた専用のサーバアプリケーションと通信することで `PC` 上に保存されている自炊ファイルをストリーミング方式で直接読むことが出来ます。  
他のコミックビューワーと比較して以下の点で優れています。

1. タイトル、著者、出版社、タグなどの情報をサーバ上のDBに保持できるので柔軟な検索が可能です。
1. 画像を端末の画面サイズに合わせて縮小してクライアントに送信するので、自炊ファイルをまるごとダウンロードするのに比べて通信量が削減できます。(画面サイズにもよりますが画像の品質を落とせば通信量を半分程度に抑えることが可能です)
1. トリミング等、画像に対する操作を全てサーバで処理しているので、比較的低スペックな端末でも快適に動作します。
1. ComicCafeサーバは通常のWebサーバのように振る舞うので、ルーターの設定で外部に公開することが可能です。(著作権には十分配慮してください)
1. 端末単位ではなくアカウント単位で、履歴、読書進捗などを管理しているので端末を変えてもシームレスで読書の続きを楽しめます。(例えば通勤中はスマホで読んで、家に帰ったら続きをタブレットで読めます)
1. アカウント毎に読める本を制限できます。ちょっとエッチな漫画は子供に見せないようにしましょう。
1. アカウント毎に使用できる端末を制限できます。子供にアカウントを与えるときは、友達に教えてしまう可能性があるので、使用できる端末を限定しましょう。
1. 複雑な条件を設定した本棚を作成できます。例えば(少年コミック and 完結した漫画)や(少女コミック & 最近30日位内に追加された漫画)などです。
1. [ComicRack](http://comicrack.cyolito.com/downloads/ComicRack/Support-Files/ComicInfoSchema.zip), [ComicBookInfo](https://docs.google.com/document/pub?id=1Tu9eoPWc_8SPgxx5J4-6mEaaRWLLv-bEA8i_jcIe3IE), [CoMet](http://www.denvog.com/comet/comet-specification/) のメタ情報の読み込みをサポートしています。

現時点ではAndroid端末のリソースにはかなりの制限があるので、パワーを持て余している `PC` を活用することで快適に漫画を読もうというのが `ComicCafe` のコンセプトです。  
よって、あまり古い低スペックの `PC` をサーバにするのは難しいかもしれません。

# 概要

## インポート
まず、PCの`HDD`に保存された大量の自炊ファイルをインポート(解析)して`Database`に登録します。`Database`には自炊ファイルの情報以外にも、著者、出版社、タグ、本棚、ブックマーク、閲覧履歴などの情報を管理しています。  
インポート処理は比較的負荷の高い処理で、処理時間を要します。

![ArchitectureImport](https://raw.githubusercontent.com/burton999dev/ComicCafeHelp/master/images/ArchitectureImport.png)

## 検索
クライアントからの検索要求はファイル検索ではなく、`Database`を検索することで処理されます。`Database`は複雑な条件の検索であっても高速に結果を返すことができます。

![ArchitectureSearch](https://raw.githubusercontent.com/burton999dev/ComicCafeHelp/master/images/ArchitectureSearch.png)

## 読書
クライアントに画像を送信する処理では、自炊ファイルをサーバー上で解凍して、画像をサーバーの`Cache`(メモリ or HDD)に展開します。そして画像をクライアントの要求に応じて加工してからクライアントに送信しています。  
この仕組みによりクライアントに転送される画像は、クライアントの画面サイズに最適にリサイズされ、画像品質などが調整されたものになるので、オリジナル画像よりファイルサイズが小さい画像になります。転送するデータ量を削減できるのは4G/3G回線を使うユーザーにとっては大きなメリットになります。  
また、この方式のデメリットはクライアントに画像が届いた時には画像はオリジナル画像よりも劣化した状態になっているので、そこからさらに拡大処理を行うと画像が非常に粗く表示されてしまいます。

![ArchitectureRead](https://raw.githubusercontent.com/burton999dev/ComicCafeHelp/master/images/ArchitectureRead.png)

